name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger for publish job

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/budgeteer:latest .

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-image
          path: |
            .
            !node_modules/
    outputs:
      artifact_path: built-image

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download built Docker image
        uses: actions/download-artifact@v3
        with:
          name: built-image

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Determine next version with semantic-release
        id: version
        run: |
          npx semantic-release version --dry-run | tee version.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Load and Tag Docker image with Semantic Version
        run: |
          version=$(cat version.txt | grep "Next release version" | sed -E 's/.*Next release version: (.*)/\1/')
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/budgeteer:latest ${{ secrets.DOCKERHUB_USERNAME }}/budgeteer:$version
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/budgeteer:$version
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/budgeteer:latest

      - name: Finalize release with semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
