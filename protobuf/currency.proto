syntax = "proto3";

package currency;

option go_package = "server/internal/infrastructure/messaging/dto";

message ExchangeRate {
  uint32 id = 1;
  double rate = 3;
  string date = 4;
}

message ComponentRatio {
  double ratio = 1;
}

message InnerComposition {
  map<string, ComponentRatio> ratios = 1;
}

message Composition {
  string date = 1;
  map<string, InnerComposition> compositions = 2;
}

message RatesList {
  repeated ExchangeRate rates = 1;
}

message Currency {
  uint32 id = 1;
  string name = 2;
  string symbol = 3;
  uint32 decimal_points = 4;
  map<uint32, RatesList> exchange_rates = 5;
  string type = 6;
  repeated Composition compositions = 7;
}

message GetAllCurrenciesRequest {
}

message GetAllCurrenciesResponse {
  repeated Currency currencies = 1;
}

message InitialExchangeRate {
  uint32 other = 4;
  double rate = 5;
  string date = 6;
}

message CreateCurrencyRequest {
  string name = 1;
  string symbol = 2;
  uint32 decimal_points = 3;
  optional InitialExchangeRate initial_exchange_rate = 4;
  string type = 5;
  optional Composition initial_composition = 6;
}

message CreateCurrencyResponse {
  uint32 currencyId = 1;
  optional uint32 exchangeRateId = 2;
}

message UpdateCurrencyFields {
  optional string name = 1;
  optional string symbol = 2;
  optional uint32 decimal_points = 3;
  optional string type = 4;
}

message UpdateCurrencyRequest {
  uint32 id = 1;
  UpdateCurrencyFields fields = 2;
}

message UpdateCurrencyResponse {

}

message SetDefaultCurrencyRequest {
  uint32 currency_id = 1;
}

message SetDefaultCurrencyResponse {

}

message UpdateCompositionRequest {
  uint32 currency_id = 1;
  Composition composition = 2;
}

message UpdateCompositionResponse {
}

service CurrencyService {
  rpc GetAllCurrencies (GetAllCurrenciesRequest) returns (GetAllCurrenciesResponse);
  rpc CreateCurrency (CreateCurrencyRequest) returns (CreateCurrencyResponse);
  rpc UpdateCurrency (UpdateCurrencyRequest) returns (UpdateCurrencyResponse);
  rpc SetDefaultCurrency (SetDefaultCurrencyRequest) returns (SetDefaultCurrencyResponse);
  rpc UpdateComposition (UpdateCompositionRequest) returns (UpdateCompositionResponse);
}
